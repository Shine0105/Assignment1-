1.#Application Health Checker

import requests
import time


url = "http://your-application-url.com" 
check_interval = 60  

def check_application_status(url):
    try:
        # Send an HTTP GET request
        response = requests.get(url, timeout=10)  
        
      
        if response.status_code == 200:
            print(f"Application is UP (Status Code: {response.status_code})")
            return "up"
        else:
            print(f"Application is DOWN (Status Code: {response.status_code})")
            return "down"
    except requests.exceptions.RequestException as e:
        
        print(f"Error connecting to {url}: {e}")
        return "down"

def monitor_application(url, interval):
    while True:
        status = check_application_status(url)
        if status == "up":
            print("Everything is functioning correctly.")
        else:
            print("The application is currently unavailable.")
        
      
        time.sleep(interval)

if __name__ == "__main__":
    monitor_application(url, check_interval)



2.#System Health Monitoring Script

import psutil
import time
import logging


CPU_THRESHOLD = 80  # CPU usage in percentage
MEMORY_THRESHOLD = 80  # Memory usage in percentage
DISK_THRESHOLD = 80  # Disk usage in percentage
PROCESS_COUNT_THRESHOLD = 200  # Maximum number of running processes


LOG_FILE = "system_health.log"
logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format="%(asctime)s - %(message)s")

def log_alert(message):
    """Log alerts to both console and log file."""
    print(message)
    logging.info(message)

def check_cpu_usage():
    """Check the CPU usage percentage."""
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_THRESHOLD:
        log_alert(f"ALERT: High CPU usage detected: {cpu_usage}% (Threshold: {CPU_THRESHOLD}%)")

def check_memory_usage():
    """Check the memory usage percentage."""
    memory = psutil.virtual_memory()
    memory_usage = memory.percent
    if memory_usage > MEMORY_THRESHOLD:
        log_alert(f"ALERT: High memory usage detected: {memory_usage}% (Threshold: {MEMORY_THRESHOLD}%)")

def check_disk_usage():
    """Check the disk usage percentage."""
    disk_usage = psutil.disk_usage('/')
    if disk_usage.percent > DISK_THRESHOLD:
        log_alert(f"ALERT: High disk usage detected: {disk_usage.percent}% (Threshold: {DISK_THRESHOLD}%)")

def check_process_count():
    """Check the number of running processes."""
    process_count = len(psutil.pids())
    if process_count > PROCESS_COUNT_THRESHOLD:
        log_alert(f"ALERT: High number of processes running: {process_count} (Threshold: {PROCESS_COUNT_THRESHOLD})")

def monitor_system_health():
    """Monitor system health by checking CPU, memory, disk, and process count."""
    while True:
        check_cpu_usage()
        check_memory_usage()
        check_disk_usage()
        check_process_count()
        
        
        time.sleep(60)

if __name__ == "__main__":
    log_alert("Starting system health monitoring...")
    monitor_system_health()


